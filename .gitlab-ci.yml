stages:
  - deps
  - build
  - lint
  - test
  - e2e
  - release
  - docker

variables:
  DOCKER_ORG: aanand91119
  DOCKER_SERVER: semaphore
  DOCKER_RUNNER: runner
  SWAGGER_VERSION: v0.30.5
  GORELEASER_VERSION: v1.25.1
  GOLINTER_VERSION: v1.57.2

semaphore_build:
  stage: build
  image:
    name: "docker"
  services:
    - name: docker:dind
      alias: buildcontainer
      entrypoint: [ "dockerd-entrypoint.sh", "--tls=false" ]
  before_script:
    - |
      echo "${$DOCKER_REGISTRY_PASSWORD:?}" | docker login --password-stdin -u "${$DOCKER_REGISTRY_USER:?}" -- "${$DOCKER_REGISTRY:?}"
  script:
    - apt-get update -y
    - apt-get install -y curl npm golang
    - go install github.com/goreleaser/goreleaser@$GORELEASER_VERSION
    - go mod vendor
    - cd web && npm install
    - npm run build
    - npm run lint
    - npm run test:unit
    - npm install dredd@13.1.2
    - ./web/node_modules/.bin/dredd --config .dredd/dredd.testing.yml
    - cd ../
    - env CGO_ENABLED=0 GOOS=$GOOS GOARCH=$GOARCH go build -o bin/semaphore -tags "netgo" -ldflags "-s -w -X github.com/ansible-semaphore/semaphore/util.Ver=$VERSION -X github.com/ansible-semaphore/semaphore/util.Commit=$SHA -X github.com/ansible-semaphore/semaphore/util.Date=$DATE" ./cli
    - go test -v -coverprofile=coverage.out ./...
    - docker build -f deployment/docker/server/Dockerfile -t $DOCKER_ORG/$DOCKER_SERVER:$CI_COMMIT_TAG .
    - docker build -f deployment/docker/runner/Dockerfile -t $DOCKER_ORG/$DOCKER_RUNNER:$CI_COMMIT_TAG .
    - docker push $DOCKER_ORG/$DOCKER_SERVER:$CI_COMMIT_TAG
    - docker push $DOCKER_ORG/$DOCKER_RUNNER:$CI_COMMIT_TAG
  variables:
    TAG: $(git name-rev --name-only --tags --no-undefined HEAD 2>/dev/null || git rev-parse --abbrev-ref HEAD)
    SHA: $(git log --pretty=format:'%h' -n 1)
    VERSION: $CI_COMMIT_REF_NAME
    DATE: $(date +%s)
    DOCKER_HOST: tcp://buildcontainer:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  artifacts:
    paths:
      - api/public/
#  rules:
#    - if: $CI_COMMIT_TAG

